<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="3" ignored="0" total="42" passed="33">
  <reporter-output>
  </reporter-output>
  <suite name="DANA Pulsa Suite" duration-ms="689406" started-at="2020-06-18T09:58:25Z" finished-at="2020-06-18T10:09:55Z">
    <groups>
    </groups>
    <test name="DanaPulsaTestOrder" duration-ms="689406" started-at="2020-06-18T09:58:25Z" finished-at="2020-06-18T10:09:55Z">
      <class name="testCases.order.TC_Create_Order">
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="51" started-at="2020-06-18T09:58:25Z" finished-at="2020-06-18T09:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="34625" started-at="2020-06-18T09:58:25Z" finished-at="2020-06-18T09:59:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="testCreateOrder" duration-ms="4740" started-at="2020-06-18T09:59:00Z" finished-at="2020-06-18T09:59:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="checkData" duration-ms="2" started-at="2020-06-18T09:59:05Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T09:59:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="checkDB" duration-ms="15974" started-at="2020-06-18T09:59:05Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T09:59:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="19640" started-at="2020-06-18T09:59:21Z" finished-at="2020-06-18T09:59:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="4" started-at="2020-06-18T09:59:40Z" finished-at="2020-06-18T09:59:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="26060" started-at="2020-06-18T09:59:40Z" finished-at="2020-06-18T10:00:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@33065d67]" name="testCreateOrder" duration-ms="4495" started-at="2020-06-18T10:00:06Z" finished-at="2020-06-18T10:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@33065d67]" name="checkData" duration-ms="1" started-at="2020-06-18T10:00:11Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@33065d67]" name="checkDB" duration-ms="10213" started-at="2020-06-18T10:00:11Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:00:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="18839" started-at="2020-06-18T10:00:21Z" finished-at="2020-06-18T10:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-18T10:00:40Z" finished-at="2020-06-18T10:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="26005" started-at="2020-06-18T10:00:40Z" finished-at="2020-06-18T10:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@350aac89]" name="testCreateOrder" duration-ms="1202" started-at="2020-06-18T10:01:06Z" finished-at="2020-06-18T10:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@350aac89]" name="checkData" duration-ms="1" started-at="2020-06-18T10:01:07Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@350aac89]" name="checkDB" duration-ms="0" started-at="2020-06-18T10:01:07Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="17864" started-at="2020-06-18T10:01:07Z" finished-at="2020-06-18T10:01:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-18T10:01:25Z" finished-at="2020-06-18T10:01:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-06-18T10:01:25Z" finished-at="2020-06-18T10:01:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@3a7442c7]" name="testCreateOrder" duration-ms="1133" started-at="2020-06-18T10:01:25Z" finished-at="2020-06-18T10:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@3a7442c7]" name="checkData" duration-ms="1" started-at="2020-06-18T10:01:26Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@3a7442c7]" name="checkDB" duration-ms="1" started-at="2020-06-18T10:01:26Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="5593" started-at="2020-06-18T10:01:26Z" finished-at="2020-06-18T10:01:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-18T10:01:32Z" finished-at="2020-06-18T10:01:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="26084" started-at="2020-06-18T10:01:32Z" finished-at="2020-06-18T10:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@4b013c76]" name="testCreateOrder" duration-ms="4687" started-at="2020-06-18T10:01:58Z" finished-at="2020-06-18T10:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@4b013c76]" name="checkData" duration-ms="7" started-at="2020-06-18T10:02:02Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@4b013c76]" name="checkDB" duration-ms="1" started-at="2020-06-18T10:02:02Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="19075" started-at="2020-06-18T10:02:03Z" finished-at="2020-06-18T10:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-18T10:02:22Z" finished-at="2020-06-18T10:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-06-18T10:02:22Z" finished-at="2020-06-18T10:02:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@4be29ed9]" name="testCreateOrder" duration-ms="1054" started-at="2020-06-18T10:02:22Z" finished-at="2020-06-18T10:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@4be29ed9]" name="checkData" duration-ms="0" started-at="2020-06-18T10:02:23Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@4be29ed9]" name="checkDB" duration-ms="1" started-at="2020-06-18T10:02:23Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="5382" started-at="2020-06-18T10:02:23Z" finished-at="2020-06-18T10:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-18T10:02:28Z" finished-at="2020-06-18T10:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="27235" started-at="2020-06-18T10:02:28Z" finished-at="2020-06-18T10:02:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@53fb3dab]" name="testCreateOrder" duration-ms="4290" started-at="2020-06-18T10:02:55Z" finished-at="2020-06-18T10:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@53fb3dab]" name="checkData" duration-ms="1" started-at="2020-06-18T10:03:00Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@53fb3dab]" name="checkDB" duration-ms="1" started-at="2020-06-18T10:03:00Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="19280" started-at="2020-06-18T10:03:00Z" finished-at="2020-06-18T10:03:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-18T10:03:19Z" finished-at="2020-06-18T10:03:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="26319" started-at="2020-06-18T10:03:19Z" finished-at="2020-06-18T10:03:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@548d708a]" name="testCreateOrder" duration-ms="4604" started-at="2020-06-18T10:03:45Z" finished-at="2020-06-18T10:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@548d708a]" name="checkData" duration-ms="1" started-at="2020-06-18T10:03:50Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@548d708a]" name="checkDB" duration-ms="0" started-at="2020-06-18T10:03:50Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="19930" started-at="2020-06-18T10:03:50Z" finished-at="2020-06-18T10:04:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-18T10:04:10Z" finished-at="2020-06-18T10:04:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="27552" started-at="2020-06-18T10:04:10Z" finished-at="2020-06-18T10:04:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@6bbe85a8]" name="testCreateOrder" duration-ms="4855" started-at="2020-06-18T10:04:37Z" finished-at="2020-06-18T10:04:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@6bbe85a8]" name="checkData" duration-ms="78" started-at="2020-06-18T10:04:42Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:04:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@6bbe85a8]" name="checkDB" duration-ms="5025" started-at="2020-06-18T10:04:42Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:04:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="19325" started-at="2020-06-18T10:04:47Z" finished-at="2020-06-18T10:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-18T10:05:07Z" finished-at="2020-06-18T10:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="26823" started-at="2020-06-18T10:05:07Z" finished-at="2020-06-18T10:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@712625fd]" name="testCreateOrder" duration-ms="4765" started-at="2020-06-18T10:05:33Z" finished-at="2020-06-18T10:05:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@712625fd]" name="checkData" duration-ms="1" started-at="2020-06-18T10:05:38Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:05:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@712625fd]" name="checkDB" duration-ms="0" started-at="2020-06-18T10:05:38Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:05:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="20187" started-at="2020-06-18T10:05:38Z" finished-at="2020-06-18T10:05:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-18T10:05:58Z" finished-at="2020-06-18T10:05:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="26151" started-at="2020-06-18T10:05:58Z" finished-at="2020-06-18T10:06:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@742ff096]" name="testCreateOrder" duration-ms="851" started-at="2020-06-18T10:06:24Z" finished-at="2020-06-18T10:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@742ff096]" name="checkData" duration-ms="2" started-at="2020-06-18T10:06:25Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@742ff096]" name="checkDB" duration-ms="0" started-at="2020-06-18T10:06:25Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="18818" started-at="2020-06-18T10:06:25Z" finished-at="2020-06-18T10:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-18T10:06:44Z" finished-at="2020-06-18T10:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="26242" started-at="2020-06-18T10:06:44Z" finished-at="2020-06-18T10:07:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@75437611]" name="testCreateOrder" duration-ms="13920" started-at="2020-06-18T10:07:10Z" finished-at="2020-06-18T10:07:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testCases.order.TC_Create_Order.testCreateOrder(TC_Create_Order.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="SKIP" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@75437611]" name="checkData" duration-ms="0" started-at="2020-06-18T10:07:24Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:07:24Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Create_Order.checkData()[pri:0, instance:testCases.order.TC_Create_Order@75437611] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Create_Order.checkData()[pri:0, instance:testCases.order.TC_Create_Order@75437611] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@75437611]" name="checkDB" duration-ms="0" started-at="2020-06-18T10:07:24Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:07:24Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Create_Order.checkDB()[pri:0, instance:testCases.order.TC_Create_Order@75437611] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Create_Order.checkDB()[pri:0, instance:testCases.order.TC_Create_Order@75437611] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="15105" started-at="2020-06-18T10:07:24Z" finished-at="2020-06-18T10:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-18T10:07:39Z" finished-at="2020-06-18T10:07:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="22232" started-at="2020-06-18T10:07:39Z" finished-at="2020-06-18T10:08:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@7bba5817]" name="testCreateOrder" duration-ms="30849" started-at="2020-06-18T10:08:02Z" finished-at="2020-06-18T10:08:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testCases.order.TC_Create_Order.testCreateOrder(TC_Create_Order.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="SKIP" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@7bba5817]" name="checkData" duration-ms="0" started-at="2020-06-18T10:08:33Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:08:33Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Create_Order.checkData()[pri:0, instance:testCases.order.TC_Create_Order@7bba5817] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Create_Order.checkData()[pri:0, instance:testCases.order.TC_Create_Order@7bba5817] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@7bba5817]" name="checkDB" duration-ms="0" started-at="2020-06-18T10:08:33Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:08:33Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Create_Order.checkDB()[pri:0, instance:testCases.order.TC_Create_Order@7bba5817] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Create_Order.checkDB()[pri:0, instance:testCases.order.TC_Create_Order@7bba5817] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="14898" started-at="2020-06-18T10:08:33Z" finished-at="2020-06-18T10:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-18T10:08:47Z" finished-at="2020-06-18T10:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="beforeClass" is-config="true" duration-ms="20861" started-at="2020-06-18T10:08:47Z" finished-at="2020-06-18T10:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="testCreateOrder()[pri:0, instance:testCases.order.TC_Create_Order@cb0755b]" name="testCreateOrder" duration-ms="30831" started-at="2020-06-18T10:09:08Z" finished-at="2020-06-18T10:09:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testCases.order.TC_Create_Order.testCreateOrder(TC_Create_Order.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateOrder -->
        <test-method status="SKIP" signature="checkData()[pri:0, instance:testCases.order.TC_Create_Order@cb0755b]" name="checkData" duration-ms="0" started-at="2020-06-18T10:09:39Z" depends-on-methods="testCases.order.TC_Create_Order.testCreateOrder" finished-at="2020-06-18T10:09:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Create_Order.checkData()[pri:0, instance:testCases.order.TC_Create_Order@cb0755b] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Create_Order.checkData()[pri:0, instance:testCases.order.TC_Create_Order@cb0755b] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:testCases.order.TC_Create_Order@cb0755b]" name="checkDB" duration-ms="0" started-at="2020-06-18T10:09:39Z" depends-on-methods="testCases.order.TC_Create_Order.checkData" finished-at="2020-06-18T10:09:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Create_Order.checkDB()[pri:0, instance:testCases.order.TC_Create_Order@cb0755b] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Create_Order.checkDB()[pri:0, instance:testCases.order.TC_Create_Order@cb0755b] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testCases.order.TC_Create_Order@1c5920df]" name="afterClass" is-config="true" duration-ms="15496" started-at="2020-06-18T10:09:39Z" finished-at="2020-06-18T10:09:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.order.TC_Create_Order -->
    </test> <!-- DanaPulsaTestOrder -->
  </suite> <!-- DANA Pulsa Suite -->
</testng-results>
