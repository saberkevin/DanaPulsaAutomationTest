<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="9" failed="10" ignored="0" total="57" passed="38">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="627768" started-at="2020-06-15T17:43:14Z" finished-at="2020-06-15T17:53:41Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="627768" started-at="2020-06-15T17:43:14Z" finished-at="2020-06-15T17:53:41Z">
      <class name="remoteService.order.TC_Remote_Service_CreateTransaction">
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="39" started-at="2020-06-15T17:43:14Z" finished-at="2020-06-15T17:43:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="28391" started-at="2020-06-15T17:43:14Z" finished-at="2020-06-15T17:43:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@22356acd]" name="testCreateTransaction" duration-ms="3447" started-at="2020-06-15T17:43:42Z" finished-at="2020-06-15T17:43:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-15T17:43:45Z" finished-at="2020-06-15T17:43:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="27465" started-at="2020-06-15T17:43:45Z" finished-at="2020-06-15T17:44:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@2e1ef60]" name="testCreateTransaction" duration-ms="2245" started-at="2020-06-15T17:44:13Z" finished-at="2020-06-15T17:44:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="5" started-at="2020-06-15T17:44:15Z" finished-at="2020-06-15T17:44:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="27906" started-at="2020-06-15T17:44:15Z" finished-at="2020-06-15T17:44:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@33308786]" name="testCreateTransaction" duration-ms="2460" started-at="2020-06-15T17:44:43Z" finished-at="2020-06-15T17:44:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-15T17:44:45Z" finished-at="2020-06-15T17:44:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="26832" started-at="2020-06-15T17:44:46Z" finished-at="2020-06-15T17:45:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@34f22f9d]" name="testCreateTransaction" duration-ms="1642" started-at="2020-06-15T17:45:12Z" finished-at="2020-06-15T17:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-15T17:45:14Z" finished-at="2020-06-15T17:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="29565" started-at="2020-06-15T17:45:14Z" finished-at="2020-06-15T17:45:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@386f0da3]" name="testCreateTransaction" duration-ms="2051" started-at="2020-06-15T17:45:44Z" finished-at="2020-06-15T17:45:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-15T17:45:46Z" finished-at="2020-06-15T17:45:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="26526" started-at="2020-06-15T17:45:46Z" finished-at="2020-06-15T17:46:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@39655d3e]" name="testCreateTransaction" duration-ms="2047" started-at="2020-06-15T17:46:12Z" finished-at="2020-06-15T17:46:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-15T17:46:14Z" finished-at="2020-06-15T17:46:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="26621" started-at="2020-06-15T17:46:14Z" finished-at="2020-06-15T17:46:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@3d1848cc]" name="testCreateTransaction" duration-ms="2057" started-at="2020-06-15T17:46:41Z" finished-at="2020-06-15T17:46:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[cannot hit API expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: cannot hit API expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction(TC_Remote_Service_CreateTransaction.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="5" started-at="2020-06-15T17:46:43Z" finished-at="2020-06-15T17:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="25178" started-at="2020-06-15T17:46:43Z" finished-at="2020-06-15T17:47:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@41709512]" name="testCreateTransaction" duration-ms="2441" started-at="2020-06-15T17:47:08Z" finished-at="2020-06-15T17:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-15T17:47:10Z" finished-at="2020-06-15T17:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="28256" started-at="2020-06-15T17:47:10Z" finished-at="2020-06-15T17:47:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@42039326]" name="testCreateTransaction" duration-ms="2653" started-at="2020-06-15T17:47:39Z" finished-at="2020-06-15T17:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="7" started-at="2020-06-15T17:47:41Z" finished-at="2020-06-15T17:47:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="26687" started-at="2020-06-15T17:47:41Z" finished-at="2020-06-15T17:48:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@48e92c5c]" name="testCreateTransaction" duration-ms="1800" started-at="2020-06-15T17:48:08Z" finished-at="2020-06-15T17:48:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-15T17:48:10Z" finished-at="2020-06-15T17:48:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="24164" started-at="2020-06-15T17:48:10Z" finished-at="2020-06-15T17:48:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="testCreateTransaction" duration-ms="1814" started-at="2020-06-15T17:48:34Z" finished-at="2020-06-15T17:48:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-15T17:48:36Z" finished-at="2020-06-15T17:48:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="21662" started-at="2020-06-15T17:48:36Z" finished-at="2020-06-15T17:48:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4f9a2c08]" name="testCreateTransaction" duration-ms="1941" started-at="2020-06-15T17:48:58Z" finished-at="2020-06-15T17:48:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-15T17:48:59Z" finished-at="2020-06-15T17:48:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-06-15T17:48:59Z" finished-at="2020-06-15T17:48:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@5443d039]" name="testCreateTransaction" duration-ms="1989" started-at="2020-06-15T17:48:59Z" finished-at="2020-06-15T17:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-15T17:49:01Z" finished-at="2020-06-15T17:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-06-15T17:49:01Z" finished-at="2020-06-15T17:49:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@63787180]" name="testCreateTransaction" duration-ms="1571" started-at="2020-06-15T17:49:01Z" finished-at="2020-06-15T17:49:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-15T17:49:03Z" finished-at="2020-06-15T17:49:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="27849" started-at="2020-06-15T17:49:03Z" finished-at="2020-06-15T17:49:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@6e4566f1]" name="testCreateTransaction" duration-ms="2046" started-at="2020-06-15T17:49:31Z" finished-at="2020-06-15T17:49:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="6" started-at="2020-06-15T17:49:33Z" finished-at="2020-06-15T17:49:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="26343" started-at="2020-06-15T17:49:33Z" finished-at="2020-06-15T17:49:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@7d1cfb8b]" name="testCreateTransaction" duration-ms="2525" started-at="2020-06-15T17:49:59Z" finished-at="2020-06-15T17:50:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="2" started-at="2020-06-15T17:50:02Z" finished-at="2020-06-15T17:50:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="24880" started-at="2020-06-15T17:50:02Z" finished-at="2020-06-15T17:50:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@7dda48d9]" name="testCreateTransaction" duration-ms="1942" started-at="2020-06-15T17:50:27Z" finished-at="2020-06-15T17:50:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="3" started-at="2020-06-15T17:50:29Z" finished-at="2020-06-15T17:50:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="23038" started-at="2020-06-15T17:50:29Z" finished-at="2020-06-15T17:50:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@a87f8ec]" name="testCreateTransaction" duration-ms="2043" started-at="2020-06-15T17:50:52Z" finished-at="2020-06-15T17:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="setup()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-15T17:50:54Z" finished-at="2020-06-15T17:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="beforeClass" is-config="true" duration-ms="25414" started-at="2020-06-15T17:50:54Z" finished-at="2020-06-15T17:51:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testCreateTransaction()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@bcef303]" name="testCreateTransaction" duration-ms="2641" started-at="2020-06-15T17:51:19Z" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTransaction -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@22356acd]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@2e1ef60]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@33308786]" name="checkData" duration-ms="0" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@34f22f9d]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@386f0da3]" name="checkData" duration-ms="2" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="FAIL" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@39655d3e]" name="checkData" duration-ms="3" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[{"id":267,"phoneNumber":"081252930ABC","catalog":{"id":13,"provider":{"id":2,"name":"Telkomsel","image":"https://res.cloudinary.com/alvark/image/upload/v1592209103/danapulsa/Telkomsel_Logo_eviigt_nbbrjv.png"},"value":15000,"price":15000}} expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: {"id":267,"phoneNumber":"081252930ABC","catalog":{"id":13,"provider":{"id":2,"name":"Telkomsel","image":"https://res.cloudinary.com/alvark/image/upload/v1592209103/danapulsa/Telkomsel_Logo_eviigt_nbbrjv.png"},"value":15000,"price":15000}} expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkData(TC_Remote_Service_CreateTransaction.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="SKIP" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@3d1848cc]" name="checkData" duration-ms="0" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Remote_Service_CreateTransaction.checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@3d1848cc] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Remote_Service_CreateTransaction.checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@3d1848cc] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@41709512]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@42039326]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@48e92c5c]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4f9a2c08]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="FAIL" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@5443d039]" name="checkData" duration-ms="3" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[{"id":271,"phoneNumber":"081252930398","catalog":{"id":13,"provider":{"id":2,"name":"Telkomsel","image":"https://res.cloudinary.com/alvark/image/upload/v1592209103/danapulsa/Telkomsel_Logo_eviigt_nbbrjv.png"},"value":15000,"price":15000}} expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: {"id":271,"phoneNumber":"081252930398","catalog":{"id":13,"provider":{"id":2,"name":"Telkomsel","image":"https://res.cloudinary.com/alvark/image/upload/v1592209103/danapulsa/Telkomsel_Logo_eviigt_nbbrjv.png"},"value":15000,"price":15000}} expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkData(TC_Remote_Service_CreateTransaction.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@63787180]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@6e4566f1]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@7d1cfb8b]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@7dda48d9]" name="checkData" duration-ms="1" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@a87f8ec]" name="checkData" duration-ms="0" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="PASS" signature="checkData()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@bcef303]" name="checkData" duration-ms="0" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.testCreateTransaction" finished-at="2020-06-15T17:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkData -->
        <test-method status="FAIL" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@22356acd]" name="checkDB" duration-ms="4282" started-at="2020-06-15T17:51:22Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:51:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkDB(TC_Remote_Service_CreateTransaction.java:277)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="4898" started-at="2020-06-15T17:51:26Z" finished-at="2020-06-15T17:51:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="FAIL" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@2e1ef60]" name="checkDB" duration-ms="5070" started-at="2020-06-15T17:51:31Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:51:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkDB(TC_Remote_Service_CreateTransaction.java:277)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="5628" started-at="2020-06-15T17:51:36Z" finished-at="2020-06-15T17:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@33308786]" name="checkDB" duration-ms="4802" started-at="2020-06-15T17:51:42Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:51:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="5745" started-at="2020-06-15T17:51:47Z" finished-at="2020-06-15T17:51:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="FAIL" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@34f22f9d]" name="checkDB" duration-ms="4711" started-at="2020-06-15T17:51:52Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:51:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkDB(TC_Remote_Service_CreateTransaction.java:277)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="5734" started-at="2020-06-15T17:51:57Z" finished-at="2020-06-15T17:52:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="FAIL" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@386f0da3]" name="checkDB" duration-ms="5650" started-at="2020-06-15T17:52:03Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:52:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkDB(TC_Remote_Service_CreateTransaction.java:277)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="6243" started-at="2020-06-15T17:52:08Z" finished-at="2020-06-15T17:52:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@39655d3e]" name="checkDB" duration-ms="0" started-at="2020-06-15T17:52:15Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:52:15Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Remote_Service_CreateTransaction.checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@39655d3e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Remote_Service_CreateTransaction.checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@39655d3e] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="4714" started-at="2020-06-15T17:52:15Z" finished-at="2020-06-15T17:52:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@3d1848cc]" name="checkDB" duration-ms="0" started-at="2020-06-15T17:52:19Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:52:19Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Remote_Service_CreateTransaction.checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@3d1848cc] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Remote_Service_CreateTransaction.checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@3d1848cc] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="4756" started-at="2020-06-15T17:52:19Z" finished-at="2020-06-15T17:52:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@41709512]" name="checkDB" duration-ms="5168" started-at="2020-06-15T17:52:24Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="5152" started-at="2020-06-15T17:52:29Z" finished-at="2020-06-15T17:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@42039326]" name="checkDB" duration-ms="5746" started-at="2020-06-15T17:52:34Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:52:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="5568" started-at="2020-06-15T17:52:40Z" finished-at="2020-06-15T17:52:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="FAIL" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@48e92c5c]" name="checkDB" duration-ms="5325" started-at="2020-06-15T17:52:46Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:52:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkDB(TC_Remote_Service_CreateTransaction.java:277)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="5001" started-at="2020-06-15T17:52:51Z" finished-at="2020-06-15T17:52:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="FAIL" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="checkDB" duration-ms="16234" started-at="2020-06-15T17:52:56Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkDB(TC_Remote_Service_CreateTransaction.java:258)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="5785" started-at="2020-06-15T17:53:12Z" finished-at="2020-06-15T17:53:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4f9a2c08]" name="checkDB" duration-ms="5131" started-at="2020-06-15T17:53:18Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="5429" started-at="2020-06-15T17:53:23Z" finished-at="2020-06-15T17:53:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@5443d039]" name="checkDB" duration-ms="0" started-at="2020-06-15T17:53:29Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:29Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TC_Remote_Service_CreateTransaction.checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@5443d039] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TC_Remote_Service_CreateTransaction.checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@5443d039] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="6038" started-at="2020-06-15T17:53:29Z" finished-at="2020-06-15T17:53:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="FAIL" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@63787180]" name="checkDB" duration-ms="5527" started-at="2020-06-15T17:53:35Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:40Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: ""]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: ""
at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
at java.lang.Long.parseLong(Long.java:601)
at java.lang.Long.parseLong(Long.java:631)
at remoteService.order.TC_Remote_Service_CreateTransaction.checkDB(TC_Remote_Service_CreateTransaction.java:272)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="FAIL" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="1035" started-at="2020-06-15T17:53:40Z" finished-at="2020-06-15T17:53:41Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at base.TestBase.deleteTransactionByPhoneNumber(TestBase.java:756)
at remoteService.order.TC_Remote_Service_CreateTransaction.afterClass(TC_Remote_Service_CreateTransaction.java:310)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:214)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@6e4566f1]" name="checkDB" duration-ms="0" started-at="2020-06-15T17:53:41Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:41Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at base.TestBase.deleteTransactionByPhoneNumber(TestBase.java:756)
at remoteService.order.TC_Remote_Service_CreateTransaction.afterClass(TC_Remote_Service_CreateTransaction.java:310)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:214)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-06-15T17:53:41Z" finished-at="2020-06-15T17:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@7d1cfb8b]" name="checkDB" duration-ms="0" started-at="2020-06-15T17:53:41Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:41Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at base.TestBase.deleteTransactionByPhoneNumber(TestBase.java:756)
at remoteService.order.TC_Remote_Service_CreateTransaction.afterClass(TC_Remote_Service_CreateTransaction.java:310)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:214)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@7dda48d9]" name="checkDB" duration-ms="0" started-at="2020-06-15T17:53:41Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:41Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at base.TestBase.deleteTransactionByPhoneNumber(TestBase.java:756)
at remoteService.order.TC_Remote_Service_CreateTransaction.afterClass(TC_Remote_Service_CreateTransaction.java:310)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:214)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-06-15T17:53:41Z" finished-at="2020-06-15T17:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-06-15T17:53:41Z" finished-at="2020-06-15T17:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@a87f8ec]" name="checkDB" duration-ms="0" started-at="2020-06-15T17:53:41Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:41Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at base.TestBase.deleteTransactionByPhoneNumber(TestBase.java:756)
at remoteService.order.TC_Remote_Service_CreateTransaction.afterClass(TC_Remote_Service_CreateTransaction.java:310)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:214)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-06-15T17:53:41Z" finished-at="2020-06-15T17:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkDB()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@bcef303]" name="checkDB" duration-ms="0" started-at="2020-06-15T17:53:41Z" depends-on-methods="remoteService.order.TC_Remote_Service_CreateTransaction.checkData" finished-at="2020-06-15T17:53:41Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at base.TestBase.deleteTransactionByPhoneNumber(TestBase.java:756)
at remoteService.order.TC_Remote_Service_CreateTransaction.afterClass(TC_Remote_Service_CreateTransaction.java:310)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:214)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDB -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:remoteService.order.TC_Remote_Service_CreateTransaction@4b6e2263]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-06-15T17:53:41Z" finished-at="2020-06-15T17:53:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- remoteService.order.TC_Remote_Service_CreateTransaction -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
